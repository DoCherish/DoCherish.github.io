<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://DoCherish.github.io</id>
    <title>Do&apos;s blog</title>
    <updated>2020-04-10T12:34:29.266Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://DoCherish.github.io"/>
    <link rel="self" href="https://DoCherish.github.io/atom.xml"/>
    <subtitle>困而学之 学思并重</subtitle>
    <logo>https://DoCherish.github.io/images/avatar.png</logo>
    <icon>https://DoCherish.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Do&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[Kafka——如何理解Kafka的“快”？]]></title>
        <id>https://DoCherish.github.io/post/ru-he-li-jie-kafka-de-kuai/</id>
        <link href="https://DoCherish.github.io/post/ru-he-li-jie-kafka-de-kuai/">
        </link>
        <updated>2020-04-09T16:21:12.000Z</updated>
        <summary type="html"><![CDATA[<p>据了解，Kafka吞吐量峰值<strong>每秒百万</strong>，就算在内存个CPU都不高的情况下，最高可达每秒十万，并且还能做到持久化存储。Kafka如此高吞吐率的原因是什么？</p>
]]></summary>
        <content type="html"><![CDATA[<p>据了解，Kafka吞吐量峰值<strong>每秒百万</strong>，就算在内存个CPU都不高的情况下，最高可达每秒十万，并且还能做到持久化存储。Kafka如此高吞吐率的原因是什么？</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flume——开发案例]]></title>
        <id>https://DoCherish.github.io/post/flume-kai-fa-an-li/</id>
        <link href="https://DoCherish.github.io/post/flume-kai-fa-an-li/">
        </link>
        <updated>2020-04-06T07:25:33.000Z</updated>
        <summary type="html"><![CDATA[<p>主要内容：</p>
<ul>
<li>介绍几种常见的Flume使用场景下，如何配置相关的配置文件</li>
</ul>
]]></summary>
        <content type="html"><![CDATA[<p>主要内容：</p>
<ul>
<li>介绍几种常见的Flume使用场景下，如何配置相关的配置文件</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flume——简介及原理]]></title>
        <id>https://DoCherish.github.io/post/flume-jian-jie-ji-jia-gou/</id>
        <link href="https://DoCherish.github.io/post/flume-jian-jie-ji-jia-gou/">
        </link>
        <updated>2020-04-03T14:41:10.000Z</updated>
        <summary type="html"><![CDATA[<p>主要内容：</p>
<ul>
<li>简介</li>
<li>优势</li>
<li>组成</li>
<li>事务性</li>
<li>Flume Agent内部原理</li>
<li>Flume配置文件配置流程</li>
</ul>
]]></summary>
        <content type="html"><![CDATA[<p>主要内容：</p>
<ul>
<li>简介</li>
<li>优势</li>
<li>组成</li>
<li>事务性</li>
<li>Flume Agent内部原理</li>
<li>Flume配置文件配置流程</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kafka——日志存储原理]]></title>
        <id>https://DoCherish.github.io/post/kafka-ri-zhi-cun-chu-yuan-li/</id>
        <link href="https://DoCherish.github.io/post/kafka-ri-zhi-cun-chu-yuan-li/">
        </link>
        <updated>2020-03-31T15:24:57.000Z</updated>
        <summary type="html"><![CDATA[<p>主要内容：</p>
<ul>
<li>Kafka底层数据存储设计</li>
<li>Kafka查询数据策略</li>
<li>具体demo及原理图</li>
</ul>
]]></summary>
        <content type="html"><![CDATA[<p>主要内容：</p>
<ul>
<li>Kafka底层数据存储设计</li>
<li>Kafka查询数据策略</li>
<li>具体demo及原理图</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kafka——简介与架构]]></title>
        <id>https://DoCherish.github.io/post/kafka-jian-jie-yu-jia-gou/</id>
        <link href="https://DoCherish.github.io/post/kafka-jian-jie-yu-jia-gou/">
        </link>
        <updated>2020-03-30T14:02:31.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kafka——可靠的数据传递]]></title>
        <id>https://DoCherish.github.io/post/kafka-ke-kao-de-shu-ju-chuan-di/</id>
        <link href="https://DoCherish.github.io/post/kafka-ke-kao-de-shu-ju-chuan-di/">
        </link>
        <updated>2020-03-23T16:03:46.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kafka——从特定offset开始消费]]></title>
        <id>https://DoCherish.github.io/post/kafka-cong-te-ding-offset-kai-shi-xiao-fei/</id>
        <link href="https://DoCherish.github.io/post/kafka-cong-te-ding-offset-kai-shi-xiao-fei/">
        </link>
        <updated>2020-03-22T06:39:05.000Z</updated>
        <summary type="html"><![CDATA[<ul>
<li>指定分区从头消费</li>
<li>指定分区从最新offset消费</li>
<li>指定分区、offset消费</li>
</ul>
]]></summary>
        <content type="html"><![CDATA[<ul>
<li>指定分区从头消费</li>
<li>指定分区从最新offset消费</li>
<li>指定分区、offset消费</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kafka——再均衡监听器]]></title>
        <id>https://DoCherish.github.io/post/kafka-zai-jun-heng-jian-ting-qi/</id>
        <link href="https://DoCherish.github.io/post/kafka-zai-jun-heng-jian-ting-qi/">
        </link>
        <updated>2020-03-20T15:28:33.000Z</updated>
        <summary type="html"><![CDATA[<p>在为消费者分配新分区或者移除旧分区时，可以通过消费者API执行一些应用程序代码，在调用subscribe方法时，传进去一个ConsumerRebalanceListener实例就可以了。ConsumerRebalanceListener有两个需要实现的方法。</p>
]]></summary>
        <content type="html"><![CDATA[<p>在为消费者分配新分区或者移除旧分区时，可以通过消费者API执行一些应用程序代码，在调用subscribe方法时，传进去一个ConsumerRebalanceListener实例就可以了。ConsumerRebalanceListener有两个需要实现的方法。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kafka——Consumer提交偏移量]]></title>
        <id>https://DoCherish.github.io/post/kafka-consumer-ti-jiao-pian-yi-liang/</id>
        <link href="https://DoCherish.github.io/post/kafka-consumer-ti-jiao-pian-yi-liang/">
        </link>
        <updated>2020-03-19T15:38:49.000Z</updated>
        <summary type="html"><![CDATA[<p>Kafka提交偏移量的方式：</p>
<ul>
<li>自动提交</li>
<li>手动提交——同步</li>
<li>手动提交——异步</li>
</ul>
]]></summary>
        <content type="html"><![CDATA[<p>Kafka提交偏移量的方式：</p>
<ul>
<li>自动提交</li>
<li>手动提交——同步</li>
<li>手动提交——异步</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[kafka——Producer]]></title>
        <id>https://DoCherish.github.io/post/kafka-sheng-chan-zhe-kafkaproducer/</id>
        <link href="https://DoCherish.github.io/post/kafka-sheng-chan-zhe-kafkaproducer/">
        </link>
        <updated>2020-03-17T15:26:41.000Z</updated>
    </entry>
</feed>